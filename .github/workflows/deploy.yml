on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build & Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Connect to EC2 and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_SSH_HOST }}
          username: ${{ secrets.EC2_SSH_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd ~/project/CoWing/test_cicd
            git pull origin main
            docker stop proxy-broadcast || true
            docker rm proxy-broadcast || true
            docker build -t proxy-broadcast .
            docker run -d -p 8081:8081 --name proxy-broadcast proxy-broadcast

      - name: Run deployment
        id: deploy
        continue-on-error: true
        run: |
          ./deploy.sh 2> error.log || echo "deploy.sh failed"

      - name: Send Discord message on Success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
          -X POST \
          -d '{"content":"‚úÖ EC2Ïóê CI/CD ÏÑ±Í≥µ! üéâ"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Read error log summary (if exists)
        if: failure()
        run: |
          if [ -f error.log ]; then
            tail -n 10 error.log > short_error.log
          else
            echo "üö´ error.log ÌååÏùºÏù¥ ÏóÜÏäµÎãàÎã§." > short_error.log
          fi

      - name: Send Discord failure alert
        if: failure()
        run: |
          LOG=$(cat short_error.log)
          ESCAPED_LOG=$(echo "$LOG" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          curl -H "Content-Type: application/json" \
          -X POST \
          -d "{\"content\":\"‚ùå EC2 CI/CD Ïã§Ìå®\n\`\`\`\n$ESCAPED_LOG\n\`\`\`\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}