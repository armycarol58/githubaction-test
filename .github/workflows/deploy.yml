on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Connect to Remote Server and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /Users/groom/Documents/project/CoWing/test_cicd
            git pull origin main
            docker stop proxy-broadcast || true
            docker rm proxy-broadcast || true
            docker build -t proxy-broadcast .
            docker run -d -p 8081:8081 --name proxy-broadcast proxy-broadcast

      # 배포실행
      - name: Run deployment
        id: deploy
        run: |
          ./deploy.sh 2> error.log || echo "FAILED=$?" >> $GITHUB_ENV

      # 성공시 메시지 전송
      - name: Send Discord message on Success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
          -X POST \
          -d '{"content":"✅ CI/CD 성공! 🎉"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      # 실패시 메시지 잡기
      - name: Read error log summary
        if: failure()
        run: |
          echo 'ERROR_LOG<<EOF' >> $GITHUB_ENV
          tail -n 10 error.log >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      # 실패시 메시지 전송
      - name: Send Discord failure alert
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
          -X POST \
          -d "$(jq -n --arg msg "❌ CI/CD 실패\n\`\`\`\n${ERROR_LOG}\n\`\`\`" '{content: $msg}')" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}